{"version":3,"sources":["components/RoomLandingPage/RoomLandingPageHeader/CreateRoom/CreateRoom.js","components/RoomLandingPage/RoomLandingPageHeader/LoginButton/LoginButton.js","components/RoomLandingPage/RoomLandingPageHeader/LogoutButton/LogoutButton.js","components/RoomLandingPage/RoomLandingPageHeader/Profile/Profile.js","components/RoomLandingPage/RoomLandingPageHeader/RoomLandingPageHeader.js","SocketContext.js","components/RoomLandingPage/RoomListing/RoomListing.js","components/RoomLandingPage/RoomListings/RoomListings.js","components/RoomLandingPage/RoomLandingPage.js","components/Room/RoomPageHeader/RoomPageHeader.js","components/Room/Message/Message.js","components/Room/ChatBox/ChatBox.js","components/Room/Input/Input.js","components/Room/Room.js","App.js","index.js"],"names":["rand","Math","round","random","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","CreateRoom","rooms","setRooms","open","handleClose","setOpen","handleOpen","classes","React","useState","modalStyle","roomName","setRoomName","modalBody","style","className","Input","type","value","onChange","e","target","onClick","preventDefault","to","Button","Modal","onClose","LoginButton","loginWithRedirect","useAuth0","LogoutButton","logout","returnTo","window","location","origin","Profile","user","isAuthenticated","isLoading","Avatar","src","picture","root","flexGrow","menuButton","marginRight","title","RoomLandingPageHeader","AppBar","Toolbar","IconButton","edge","color","Typography","variant","SocketContext","createContext","RoomListing","socket","useContext","emit","handleClick","id","RoomListings","cleanedRoomList","console","log","map","i","RoomLandingPage","setCleanedRoomList","setLoading","useEffect","on","arg","roomList","JSON","parse","includes","oldList","slice","length","exitButton","textAlign","appBar","RoomPageHeader","memo","Link","Message","message","Messagename","isSentByCurrentUser","split","ChatBox","messages","undefined","refreshcount","setMessage","setMessages","sendMessage","useCallback","oldMessages","name","placeholder","onKeyPress","key","socketUseEffectCount","messagesUseEffectCount","Room","QueryString","search","msg","nickname","io","App","Provider","exact","path","component","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.2661049d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Modal, TextField, Input, Button } from '@material-ui/core/'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\n\r\nconst CreateRoom = ({ rooms, setRooms, open, setOpen, handleOpen, handleClose }) => {\r\n    const classes = useStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [roomName, setRoomName] = useState('')\r\n\r\n   // console.log(rooms, setRooms, open, setOpen, handleOpen, handleClose)\r\n\r\n\r\n    const modalBody = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <div className=\"ModalHeader\">\r\n                Enter Room Name:\r\n            </div>\r\n            <div className=\"RoomEntryField\">\r\n                <Input type=\"text\" value={roomName} onChange={e => setRoomName(e.target.value)}>\r\n\r\n                </Input>\r\n            </div>\r\n            <div className=\"RoomNameSubmitButton\">\r\n                <Link onClick={e=> !roomName ? e.preventDefault() : null} to={`/room?roomName=${roomName}`}>\r\n                    <Button type=\"submit\">Create</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n    // Create the socket and move to a different component using <Link> when you click the create button\r\n\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={handleClose}>\r\n            {modalBody}\r\n        </Modal>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default CreateRoom","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <Button onClick={() => loginWithRedirect()}>Log In</Button>;\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Button } from '@material-ui/core'\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <Button onClick={() => logout({ returnTo: window.location.origin })}>\r\n      Log Out\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst Profile = () => {\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n  if (isLoading) {\r\n    return <div>Loading ...</div>;\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    return (\r\n      <div>\r\n        <Avatar src={user.picture} />\r\n\r\n      </div>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <div>\r\n        <Avatar/>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default Profile;","import React from 'react'\r\n\r\nimport { AppBar, IconButton, Typography, Toolbar } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\n\r\nimport CreateRoom from './CreateRoom/CreateRoom'\r\nimport LoginButton from './LoginButton/LoginButton'\r\nimport LogoutButton from './LogoutButton/LogoutButton'\r\nimport Profile from './Profile/Profile'\r\n\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nconst RoomLandingPageHeader = ({ rooms, setRooms }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const { isAuthenticated } = useAuth0()\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //console.log(rooms, setRooms)\r\n\r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={handleOpen}>\r\n                <AddIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Click to create a room(Refresh to see rooms)\r\n              </Typography>\r\n              <CreateRoom open={open} setOpen={setOpen} handleOpen={handleOpen} handleClose={handleClose} />\r\n              {isAuthenticated ? <LogoutButton/> : <LoginButton/>}\r\n                <Profile/>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n      );\r\n\r\n}\r\n\r\n\r\n\r\nexport default RoomLandingPageHeader\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport default SocketContext","import React, { useEffect, useContext, } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport './RoomListing.css'\r\n\r\nimport io, { Socket } from 'socket.io-client'\r\n\r\nimport SocketContext from '../../../SocketContext'\r\n\r\nconst RoomListing = ({ roomName }) => {\r\n\r\n    const socket = useContext(SocketContext)\r\n\r\n\r\n    //Send roomName to backend and make use join room they clicked on\r\n\r\n\r\n    function handleClick(roomName) {\r\n        socket.emit('join room', roomName, () => {\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Link onClick={() => handleClick(roomName)} to={`/room?roomName=${roomName}`}>\r\n            <Button className=\"Room\" >\r\n\r\n                <p id=\"roomName\">{roomName}</p>\r\n\r\n            </Button>\r\n        </Link>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default RoomListing","import React from \"react\"\r\nimport RoomListing from \"../RoomListing/RoomListing\"\r\nimport './RoomListings.css'\r\n\r\n\r\nconst RoomListings = ({cleanedRoomList}) => {\r\n\r\n\r\n    console.log(cleanedRoomList)\r\n    if(cleanedRoomList !== []){\r\n        return(\r\n            <div className=\"roomListingsList\">\r\n                {cleanedRoomList.map((roomName, i) => <div key={i}><RoomListing roomName={roomName}/></div>)}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                Hel\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomListings","import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport io from 'socket.io-client'\r\n\r\nimport './RoomLandingPage.css'\r\n\r\nimport RoomLandingPageHeader from './RoomLandingPageHeader/RoomLandingPageHeader'\r\nimport RoomListings from './RoomListings/RoomListings'\r\nimport SocketContext from '../../SocketContext'\r\n\r\n//let socket\r\n\r\n\r\n\r\n\r\n\r\n//TODO: ReAdd the OnlineStatusSideDrawer and figure out how to make it not cover the header\r\n//TODO: DONE()Add an indentifer to user made room names that will let me filter them out from the automatically made room names\r\n//      DONE(Make rooms an Array, that might make it work)Then make it so each room gets its own listing\r\n//      Then figure out how to make the rooms joinable\r\n\r\nconst RoomLandingPage = () => {\r\n\r\n    \r\n    const [rooms, setRooms] = useState('')\r\n    const [cleanedRoomList, setCleanedRoomList] = useState([])\r\n    const [isLoading, setLoading] = useState(true)\r\n    \r\n\r\n    const socket = useContext(SocketContext)\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n\r\n\r\n        socket.on(\"sentRooms\", (arg) => {\r\n            //Gets stringifyed array of room names from server\r\n            console.log(arg.roomList)\r\n            console.log(typeof(arg.roomList))\r\n            setRooms(arg.roomList)\r\n            //console.log(rooms)\r\n        })\r\n\r\n        setLoading(false)\r\n    }, [socket, rooms])\r\n\r\n    //console.log(rooms)\r\n\r\n    useEffect(() =>{\r\n\r\n        if(rooms !== \"\"){\r\n            console.log(rooms)\r\n            console.log(\"Got rooms\")\r\n            let roomList = JSON.parse(rooms)\r\n            console.log(roomList)\r\n            for(let i = 0; i < roomList.length; i++){\r\n                if(roomList[i][0].includes('+')){\r\n                    // cleanedRoomList.push(roomList[i][0].slice(0, roomList[i][0].length -1 ))\r\n                    setCleanedRoomList( oldList => [...oldList, roomList[i][0].slice(0, roomList[i][0].length -1 )])\r\n                }\r\n            }\r\n\r\n           // console.log(cleanedRoomList)\r\n\r\n        }\r\n    }, [rooms])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div>\r\n                Loading....\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"RoomLandingPage\">\r\n                <div className=\"RoomLandingPageHeader\">\r\n                    <RoomLandingPageHeader />\r\n                </div>\r\n                <div className=\"RoomListings\">\r\n                  <RoomListings cleanedRoomList={cleanedRoomList}/>\r\n                </div>\r\n    \r\n\r\n    \r\n    \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default RoomLandingPage\r\n","import React from 'react'\r\nimport { Button, AppBar, Toolbar } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nimport './RoomPageHeader.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    exitButton: {\r\n      \r\n      textAlign: 'end'\r\n    },\r\n    roomName: {\r\n      flexGrow: 1,\r\n      textAlign:'center'\r\n    },\r\n    appBar: {\r\n        backgroundColor: '#008598',\r\n        position: 'static'\r\n    }\r\n  }));\r\n\r\n\r\nconst RoomPageHeader = React.memo(({ roomName }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}> \r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                    <div className={classes.roomName}>\r\n                        {roomName}\r\n                    </div>\r\n                    <div>\r\n                        <Link Link to=\"/\">\r\n                            <Button edge=\"start\" className={classes.exitButton}>\r\n                                Leave Room\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default RoomPageHeader","import React from 'react';\r\n\r\nimport './Message.css';\r\n\r\n//TODO: Add styling to the messages, add names to messsages and make the appear on the right if from sender, or left if from someone else\r\n//TODO: Figure out how I'm going to get the uses name to show up next to the picture\r\nconst Message = React.memo(({ message }) => {\r\n    //console.log(message)\r\n\r\n\r\n    let Messagename = \" \"\r\n    let isSentByCurrentUser = false\r\n\r\n\r\n\r\n    //1.Extract user name from message\r\n    //2.Compare it to the current users name\r\n    //If its different, show message on left. The same, show message on right\r\n\r\n    if (message.includes(\"+-+\")) {\r\n        Messagename = message.split(\"+-+\")\r\n        message = Messagename[0]\r\n    }\r\n    else {\r\n        isSentByCurrentUser = true\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        isSentByCurrentUser ? (\r\n            <div className=\"messageContainer\">\r\n                <div className=\"messageBox\">\r\n                    <p className=\"messageTextHomeBackground\">\r\n                        <span id=\"messageTextHome\">\r\n                            {message}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>)\r\n            : (\r\n                <div className=\"messageContainer\">\r\n                    <div className=\"messageNameBox\">\r\n                        <p className=\"messageNameBackground\">\r\n                            <span id=\"messageName\">{Messagename[1]}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"messageBox\">\r\n                        <p className=\"messageTextForeignBackground\">\r\n                            <span id=\"messageTextForeign\">\r\n                                {message}\r\n                            </span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            )\r\n    )\r\n})\r\n\r\nexport default Message","import React, { useCallback, useEffect } from 'react'\r\n\r\nimport Message from '../Message/Message'\r\n\r\nimport './ChatBox.css'\r\n\r\n//TODO: Make the box fill up most of the screen\r\n\r\nlet refreshcount = 0;\r\nlet messagesUseEffectCount = 0;\r\nconst ChatBox = React.memo(({ messages, user}) => {\r\n\r\n    //console.log(user)\r\n    // refreshcount++\r\n    // console.log(`Chat box has refreshed ${refreshcount} times`)\r\n\r\n\r\n    if(messages && user){\r\n        return(\r\n            <div className=\"message\">\r\n            {messages.map((message, i) => <div key={i}><Message message={message} user = {user}/></div>)}\r\n            </div>\r\n        )\r\n    }\r\n    else if(messages && user === undefined){\r\n        return(\r\n            <div className=\"chatBox\">\r\n            {messages.map((message, i) => <div key={i}><Message message={message} /></div>)}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                    adwad\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n \r\n},)\r\n\r\nexport default ChatBox","import React, { useContext, useCallback } from 'react'\r\n\r\nimport './Input.css'\r\n\r\n\r\nimport SocketContext from '../../../SocketContext'\r\n\r\n//TODO: Stylize the input and button, move it to the bottom of the page\r\n//TODO: Optimize the input, make it so setMessage isn't called every onChange\r\n//TODO: Set 2 second interval between message sends\r\n//TODO: experiment with wrapping sendMessage in useCallback\r\n\r\nlet refreshcount = 0\r\nconst Input = React.memo(({ message, setMessage, setMessages, user, roomName }) => {\r\n\r\n    const socket = useContext(SocketContext)\r\n\r\n    \r\n    const sendMessage = useCallback((message) => {\r\n        if (message && user) {\r\n            socket.emit('sendMessage', { message, user, roomName }, () => setMessage(''))\r\n            setMessages(oldMessages => [...oldMessages, message])\r\n        }\r\n        else if (message && user === undefined) {\r\n            socket.emit('sendMessage', { message, roomName }, () => setMessage(''))\r\n            setMessages(oldMessages => [...oldMessages, message])\r\n        }\r\n\r\n        refreshcount++\r\n        console.log(`sendMessage has been ran ${refreshcount} times`)\r\n\r\n        \r\n    }, [roomName, setMessage, setMessages, socket, user])\r\n\r\n\r\n    // refreshcount++\r\n    // console.log(`Input has refreshed ${refreshcount} times`)\r\n    return (\r\n        <div className=\"inputBar\">\r\n            <input type=\"text\"\r\n                name=\"name\"\r\n                value={message}\r\n                placeholder=\"Type a message...\"\r\n                onChange={e => setMessage(e.target.value)}\r\n                onKeyPress={e => e.key === 'Enter' ? sendMessage(message) : null} />\r\n\r\n            <button onClick={() => sendMessage(message)}> Send</button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Input","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport QueryString from 'query-string'\r\nimport RoomPageHeader from './RoomPageHeader/RoomPageHeader'\r\nimport ChatBox from './ChatBox/ChatBox'\r\nimport Input from './Input/Input'\r\nimport SocketContext from '../../SocketContext'\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport './Room.css'\r\n\r\n\r\nlet refreshcount = 0\r\nlet socketUseEffectCount = 0\r\nlet messagesUseEffectCount = 0\r\n//TODO: Look into whether you can change timeout times\r\n\r\nconst Room = React.memo(({ location }) => {\r\n\r\n    const [roomName, setRoomName] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [messages, setMessages] = useState([])\r\n    const { user } = useAuth0()\r\n\r\n    const socket = useContext(SocketContext)\r\n\r\n    useEffect(() => {\r\n\r\n        let { roomName } = QueryString.parse(location.search)\r\n\r\n        setRoomName(roomName)\r\n\r\n        socket.emit('create', `${roomName}`)\r\n\r\n        socketUseEffectCount++\r\n        console.log(`%c1st useEffect has run ${socketUseEffectCount}`, 'color:green')\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('recieveMessage', function(msg) {\r\n\r\n            setMessages(messages => [...messages, msg.message + `+-+${msg.nickname}`])\r\n\r\n            messagesUseEffectCount++\r\n            console.log(`%c2nd useEffect has run ${messagesUseEffectCount}`, 'color:red')\r\n           \r\n        })\r\n    },[ socket])\r\n\r\n    // refreshcount++\r\n    // console.log(`room has refreshed ${refreshcount} times`)\r\n\r\n    console.log(messages)\r\n    return (\r\n\r\n        <div className=\"RoomPage\">\r\n            <div className=\"RoomPageHeader\">\r\n                <RoomPageHeader \r\n                roomName={roomName} />\r\n            </div>\r\n            <div className=\"ChatBox\">\r\n                <ChatBox \r\n                messages = {messages} \r\n                user = {user}/>\r\n            </div>\r\n            <div className=\"MessageInput\">\r\n                <Input \r\n                message={message} \r\n                setMessage={setMessage} \r\n                socket={socket} \r\n                messages={messages} \r\n                setMessages={setMessages} \r\n                user={user}\r\n                roomName ={roomName} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\nexport default Room","\r\nimport React from 'react';\r\n\r\nimport {  Route, Switch, HashRouter, BrowserRouter} from 'react-router-dom'\r\n\r\nimport RoomLandingPage from './components/RoomLandingPage/RoomLandingPage'\r\nimport Room from './components/Room/Room'\r\n\r\nimport io from 'socket.io-client'\r\nimport SocketContext from './SocketContext'\r\n\r\nconst ENDPOINT = \"https://cortlando-chat-room-app.herokuapp.com/\"\r\nconst socket = io(ENDPOINT)\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SocketContext.Provider value={socket}>\r\n      <HashRouter>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={RoomLandingPage}/>\r\n            <Route path=\"/room\" component={Room}/>\r\n          </Switch>\r\n        </div>\r\n      </HashRouter>\r\n      </SocketContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport './index.css'\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\n//TODO: (maybe) make it so that if someone gets timed out from their auth0 session, they get booted from the room\r\n\r\n\r\nReactDOM.render(\r\n  \r\n    <Auth0Provider\r\n      domain=\"dev-nlvqxf6y.us.auth0.com\"\r\n      clientId=\"r1G0n8EYBmhazRHNk2fOPUteJbRleISB\"\r\n      redirectUri={window.location.origin}\r\n    >\r\n      <App />\r\n    </Auth0Provider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}